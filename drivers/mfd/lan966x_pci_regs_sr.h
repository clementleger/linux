/* SPDX-License-Identifier: (GPL-2.0 OR MIT) */
/*
 * Microchip LAN966x Switch driver
 *
 * License: Dual MIT/GPL
 * Copyright (c) 2020 Microchip Technology Inc.
 */

/* This file is autogenerated by cml-utils 2021-02-04 13:07:36 +0100.
 * Commit ID: 0359c23857fee4dc44d5a77219b74b8cb979e0c1 (dirty)
 */

#ifndef _LAN966X_PCI_REGS_SR_H_
#define _LAN966X_PCI_REGS_SR_H_

#include <linux/bitops.h>

#define LAN966X_BUILD_ID_REG GCB_BUILDID
#define LAN966X_BUILD_ID 1610532836

enum lan966x_target {
	TARGET_CPU = 6,
	TARGET_GCB = 25,
	TARGET_ORG = 34,
	TARGET_SYS = 51,
	NUM_TARGETS = 65
};

#define __REG(...)    __VA_ARGS__


/*      CPU:INTR:INTR_RAW */
#define CPU_INTR_RAW           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 0, 0, 1, 4)

/*      CPU:INTR:INTR_RAW1 */
#define CPU_INTR_RAW1           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 4, 0, 1, 4)

/*      CPU:INTR:INTR_RAW1 */
#define CPU_INTR_RAW2           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 8, 0, 1, 4)

/*      CPU:INTR:INTR_TRIGGER */
#define CPU_INTR_TRIGGER(r)       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 12, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER1 */
#define CPU_INTR_TRIGGER1(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 20, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER2 */
#define CPU_INTR_TRIGGER2(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 28, r, 2, 4)

/*      CPU:INTR:INTR_FORCE */
#define CPU_INTR_FORCE           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 36, 0, 1, 4)

/*      CPU:INTR:INTR_FORCE1 */
#define CPU_INTR_FORCE1          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 40, 0, 1, 4)

/*      CPU:INTR:INTR_FORCE2 */
#define CPU_INTR_FORCE2          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 44, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY */
#define CPU_INTR_STICKY           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 48, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY1 */
#define CPU_INTR_STICKY1          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 52, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY2 */
#define CPU_INTR_STICKY2          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 56, 0, 1, 4)

/*      CPU:INTR:INTR_ENA */
#define CPU_INTR_ENA              __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 72, 0, 1, 4)

/*      CPU:INTR:INTR_ENA1 */
#define CPU_INTR_ENA1             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 76, 0, 1, 4)

/*      CPU:INTR:INTR_ENA2 */
#define CPU_INTR_ENA2             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 80, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR */
#define CPU_INTR_ENA_CLR          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 84, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR1 */
#define CPU_INTR_ENA_CLR1         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 88, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR2 */
#define CPU_INTR_ENA_CLR2         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 92, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET */
#define CPU_INTR_ENA_SET          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 96, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET1 */
#define CPU_INTR_ENA_SET1         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 100, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET2 */
#define CPU_INTR_ENA_SET2         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 104, 0, 1, 4)

/*      CPU:INTR:DST_INTR_MAP */
#define CPU_DST_INTR_MAP(r)       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 120, r, 9, 4)

/*      CPU:INTR:DST_INTR_MAP1 */
#define CPU_DST_INTR_MAP1(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 156, r, 9, 4)

/*      CPU:INTR:DST_INTR_MAP2 */
#define CPU_DST_INTR_MAP2(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 192, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT */
#define CPU_DST_INTR_IDENT(r)     __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 228, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT1 */
#define CPU_DST_INTR_IDENT1(r)    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 264, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT2 */
#define CPU_DST_INTR_IDENT2(r)    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 300, r, 9, 4)

/*      CPU:INTR:DEV_INTR_TRIGGER */
#define CPU_DEV_INTR_TRIGGER(r)   __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 356, r, 2, 4)

#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER(x) ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_M  GENMASK(7, 0)
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_STICKY */
#define CPU_DEV_INTR_STICKY       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 364, 0, 1, 4)

#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY(x)   ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_M    GENMASK(7, 0)
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_ENA */
#define CPU_DEV_INTR_ENA          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 372, 0, 1, 4)

#define CPU_DEV_INTR_ENA_DEV_INTR_ENA(x)         ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_M          GENMASK(7, 0)
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_X(x)       ((x) & GENMASK(7, 0))

#endif /* _LAN966X_PCI_REGS_SR_H_ */
